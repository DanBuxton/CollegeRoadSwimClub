@inject MediatR.ISender _sender

<h3>Swimmers</h3>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            @*<th>Name</th>
            <th>Name</th>
            <th>Name</th>
            <th>Name</th>*@
            <th>Parent</th>
        </tr>
    </thead>
    <tbody>
        @if (swimmerList is null)
        {
            <tr>
                <td colspan="12" class="align-content-center">No swimmers</td>
            </tr>
        }
        else
        {
            <tr>
                @foreach (var swimmer in swimmerList.Items)
                {
                    
                }
            </tr>
        }
    </tbody>
</table>

@code {
    private PaginatedList<SwimmerDTO> swimmerList = new(new(), 0, 1, 0);

    [Parameter]
    public GetSwimmersWithPaginationQuery query { get; set; }

    [Parameter, SupplyParameterFromQuery(Name = "page")]
    public int PageNumber { get; set; } = 1;

    protected override async Task OnInitializedAsync()
    {
        swimmerList = await _sender.Send(query);

        await base.OnInitializedAsync();
    }
}
